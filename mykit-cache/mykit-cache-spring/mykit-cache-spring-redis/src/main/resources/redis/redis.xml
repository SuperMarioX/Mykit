<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
 						http://www.springframework.org/schema/context 
 						http://www.springframework.org/schema/context/spring-context-4.0.xsd
						http://www.springframework.org/schema/cache 
						http://www.springframework.org/schema/cache/spring-cache-4.0.xsd"
						default-autowire="byName">
 	
 	 <!-- ******************** redis缓存   **********************-->
	<!-- 注解一定要配置，不然不起作用 -->
	<cache:annotation-driven />
	
	<!-- jedis 配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
	    <property name="maxIdle" value="${redis.maxIdle}" />
	    <!--<property name="maxWaitMillis" value="${redis.maxWait}" />-->
	    <property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	
	<!-- redis服务器中心 -->
	<bean id="connectionFactory"
	    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	    <property name="poolConfig" ref="poolConfig" />
	    <property name="port" value="${redis.port}" />
	    <property name="hostName" value="${redis.hostname}" />
	    <!-- <property name="password" value="${redis.password}" /> -->
	    <property name="timeout" value="${redis.timeout}"></property>
	</bean>
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	    <property name="connectionFactory" ref="connectionFactory" />
	    <property name="keySerializer">
	        <bean
	            class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	    </property>
	    <property name="valueSerializer">
	        <bean
	            class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
	    </property>
	</bean>
	<!-- 配置缓存 -->
	<bean id="cacheManager" class="io.mykit.cache.spring.annotation.parser.SpringRedisCacheManager">
	    <constructor-arg ref="redisTemplate" />
	</bean>
	
	
	 <!-- 配置RedisCacheConfig -->  
    <bean id="redisCacheConfig" class="io.mykit.cache.spring.redis.RedisCacheConfig">  
        <constructor-arg ref="connectionFactory" />  
        <constructor-arg ref="redisTemplate" />  
        <constructor-arg ref="cacheManager" />  
    </bean>  
	
	<!-- ******************** redis缓存   **********************-->
</beans>